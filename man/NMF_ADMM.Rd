% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{NMF_ADMM}
\alias{NMF_ADMM}
\title{Standard NMF implemented in ADMM}
\usage{
NMF_ADMM(V, k, cluster, dist = "F2", verbose = 0L, maxiter = 100L,
  fixediter = 0L, rho = 3, tol = 0.001)
}
\arguments{
\item{V}{A (m x n) non-negative matrix
in the original data matrix.}

\item{k}{An integer to specify desired rank of the low rank factorization result}

\item{cluster}{A (k x 1) vector of integer 0~(k-1) indicating initial cluster assignment}

\item{dist}{A string indicating the distance measure (default: "F2").
Currently only "F2", for Euclidean distance and "KL" for KL divergence are implemented}

\item{verbose}{A 0/1 integer (default 0). If 1: output the relative error after each iteration}

\item{maxiter}{An integer (default 100) for the maximal number of iterations}

\item{fixediter}{An integer (optional) for a fixed number of iterations}

\item{rho}{Penalty parameter in ADMM (default 3)}

\item{tol}{Tolerance parameter to declare convergence}
}
\value{
A list containing the following values
* W      : A (m x k) non-negative matrix containing W in V ~ WG^t
* G      : A (n x k) non-negative matrix containing G in V ~ WG^t
* Error  : A vector containing the relative distance of this approximation in each iteration
}
\description{
This function implements a ADMM for standard NMF:
V ~ WG^t with V, W & G non-negative.
}
